{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "b35f3e0acc820737fbf257aa80ee2b60",
     "grade": false,
     "grade_id": "cell-0202c9319ef88f3b",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "<img src=\"./Archivos/miad4.png\" width=800x>\n",
    "\n",
    "# Visualización\n",
    "\n",
    "En este taller implementarás métodos de las librerías `ipywidgets` y `plotly`, para integrarlos en procesos de visualización de datos."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "706d0f08c967428a46254a75e597d62b",
     "grade": false,
     "grade_id": "cell-bbc2ca82f4643254",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "## Habilidades en práctica\n",
    "\n",
    "Al realizar este taller podrás revisar tu progreso para:\n",
    "\n",
    "**1.** Crear diferentes tipos de visualizaciones en `plotly` y personalizarlas de manera amigable. <br />\n",
    "**2.** Utilizar `ipywidgets` para explorar datos de forma interactiva. <br />\n",
    "**3.** Crear visualizaciones interactivas en `plotly` con `ipywidgets`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "3accfd3f6e0fcb17a833d292808ff3a7",
     "grade": false,
     "grade_id": "cell-cdfb2f65f277a712",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "## Instrucciones\n",
    "\n",
    "En cada uno de los siguientes ejercicios deberás escribir el código solicitado estrictamente en las celdas indicadas para ello, teniendo en cuenta las siguientes recomendaciones:\n",
    "\n",
    "* No crear, eliminar o modificar celdas de este Notebook (salvo lo que se te indique).\n",
    "\n",
    "Esta es una actividad calificada y, por lo tanto, debe ser resuelta individualmente."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "4c8d7d4dbe30a060a1cc889b7d9d1902",
     "grade": false,
     "grade_id": "cell-2ad99bdb8f21dc15",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "## Ejercicios"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "2aa3884bcc416fc1896940a26481a851",
     "grade": false,
     "grade_id": "cell-d1117d2dc5c7ce9f",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "En la siguente celda encuentras declarados los paquetes necesarios para el desarollo de este taller."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "a7d1188a607cdd3f1e05af2242ca7686",
     "grade": false,
     "grade_id": "cell-dd397dc6a693cd46",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# Esta celda no es modificable.\n",
    "import plotly.graph_objects as go\n",
    "import ipywidgets as widgets\n",
    "import pandas as pd\n",
    "from ipywidgets import interactive"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "11462d3106666cd4b524e5e04cfbad9d",
     "grade": false,
     "grade_id": "cell-ad5b3b654bf65d41",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "## Estadísticas bancarias"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "b0473a6d6888dca06897e53804f96b78",
     "grade": false,
     "grade_id": "cell-dce0742e7440a658",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "A continuación, encuentras la descripción de las variables contenidas en la base de datos 'BankChurners.csv'. Utiliza esta información para dar respuesta a los ejercicios 1 y 2."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "c159cd01e029b68fd3291fe8c5676be1",
     "grade": false,
     "grade_id": "cell-75eb080db18315fa",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "| <center>Variable<center> | <center>Descripción<center> | \n",
    "| :--- | :--- | \n",
    "|  CLIENTNUM  | Número de cliente|\n",
    "|  Attrition_Flag | Si la cuenta del cliente se encuentra activa |\n",
    "|  Customer_Age  | Edad del cliente|\n",
    "|  Gender  | Género de cliente|\n",
    "|  Dependent_count  | Número de personas a cargo|\n",
    "|  Education_Level | Nivel máximo de escolaridad alcanzado|\n",
    "| Marital_Status | Estado conyugal |\n",
    "|  Income_Category  | Categoría de ingresos anuales del titular de la cuenta|\n",
    "|  Card_Category  |  Tipo de tarjeta (Azul, Plata, Oro, Platino)|\n",
    "|  Months_on_book  | Periodo de relación con el banco|\n",
    "|  Total_Relationship_Count  | Número total de productos del cliente|\n",
    "|  Months_Inactive_12_mon | Número de meses de inactividad en los últimos 12 meses|\n",
    "|  Contacts_Count_12_mon  | Número de contactos en los últimos 12 meses|\n",
    "|  Credit_Limit  | Límite de crédito de la tarjeta de crédito|\n",
    "|  Total_Revolving_Bal | Saldo rotativo total de la tarjeta de crédito|\n",
    "|  Avg_Open_To_Buy  | Línea de crédito abierta (media de los últimos 12 meses)|\n",
    "|  Total_Amt_Chng_Q4_Q1  | Cambio en el monto de transacciones (cuarto trimestre a primer trimestre) |\n",
    "|  Total_Trans_Amt  | Monto total de las transacciones (últimos 12 meses)|\n",
    "|  Total_Trans_Ct  | Recuento total de transacciones (últimos 12 meses)|\n",
    "|  Total_Ct_Chng_Q4_Q1  | Cambio en el número de transacciones (cuarto trimestre a primer trimestre) |\n",
    "|  Avg_Utilization_Ratio  | Ratio de utilización media de la tarjeta|"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "8ff7a02b55cca4f1b077b2f6d22c20cd",
     "grade": false,
     "grade_id": "cell-587b69ee8615f495",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CLIENTNUM</th>\n",
       "      <th>Attrition_Flag</th>\n",
       "      <th>Customer_Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Dependent_count</th>\n",
       "      <th>Education_Level</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income_Category</th>\n",
       "      <th>Card_Category</th>\n",
       "      <th>Months_on_book</th>\n",
       "      <th>...</th>\n",
       "      <th>Months_Inactive_12_mon</th>\n",
       "      <th>Contacts_Count_12_mon</th>\n",
       "      <th>Credit_Limit</th>\n",
       "      <th>Total_Revolving_Bal</th>\n",
       "      <th>Avg_Open_To_Buy</th>\n",
       "      <th>Total_Amt_Chng_Q4_Q1</th>\n",
       "      <th>Total_Trans_Amt</th>\n",
       "      <th>Total_Trans_Ct</th>\n",
       "      <th>Total_Ct_Chng_Q4_Q1</th>\n",
       "      <th>Avg_Utilization_Ratio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>768805383</td>\n",
       "      <td>Existing Customer</td>\n",
       "      <td>45</td>\n",
       "      <td>M</td>\n",
       "      <td>3</td>\n",
       "      <td>High School</td>\n",
       "      <td>Married</td>\n",
       "      <td>$60K - $80K</td>\n",
       "      <td>Blue</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>12691.0</td>\n",
       "      <td>777</td>\n",
       "      <td>11914.0</td>\n",
       "      <td>1.335</td>\n",
       "      <td>1144</td>\n",
       "      <td>42</td>\n",
       "      <td>1.625</td>\n",
       "      <td>0.061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>818770008</td>\n",
       "      <td>Existing Customer</td>\n",
       "      <td>49</td>\n",
       "      <td>F</td>\n",
       "      <td>5</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Single</td>\n",
       "      <td>Less than $40K</td>\n",
       "      <td>Blue</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8256.0</td>\n",
       "      <td>864</td>\n",
       "      <td>7392.0</td>\n",
       "      <td>1.541</td>\n",
       "      <td>1291</td>\n",
       "      <td>33</td>\n",
       "      <td>3.714</td>\n",
       "      <td>0.105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>713982108</td>\n",
       "      <td>Existing Customer</td>\n",
       "      <td>51</td>\n",
       "      <td>M</td>\n",
       "      <td>3</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Married</td>\n",
       "      <td>$80K - $120K</td>\n",
       "      <td>Blue</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3418.0</td>\n",
       "      <td>0</td>\n",
       "      <td>3418.0</td>\n",
       "      <td>2.594</td>\n",
       "      <td>1887</td>\n",
       "      <td>20</td>\n",
       "      <td>2.333</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>769911858</td>\n",
       "      <td>Existing Customer</td>\n",
       "      <td>40</td>\n",
       "      <td>F</td>\n",
       "      <td>4</td>\n",
       "      <td>High School</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>Less than $40K</td>\n",
       "      <td>Blue</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>3313.0</td>\n",
       "      <td>2517</td>\n",
       "      <td>796.0</td>\n",
       "      <td>1.405</td>\n",
       "      <td>1171</td>\n",
       "      <td>20</td>\n",
       "      <td>2.333</td>\n",
       "      <td>0.760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>709106358</td>\n",
       "      <td>Existing Customer</td>\n",
       "      <td>40</td>\n",
       "      <td>M</td>\n",
       "      <td>3</td>\n",
       "      <td>Uneducated</td>\n",
       "      <td>Married</td>\n",
       "      <td>$60K - $80K</td>\n",
       "      <td>Blue</td>\n",
       "      <td>21</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4716.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4716.0</td>\n",
       "      <td>2.175</td>\n",
       "      <td>816</td>\n",
       "      <td>28</td>\n",
       "      <td>2.500</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CLIENTNUM     Attrition_Flag  Customer_Age Gender  Dependent_count  \\\n",
       "0  768805383  Existing Customer            45      M                3   \n",
       "1  818770008  Existing Customer            49      F                5   \n",
       "2  713982108  Existing Customer            51      M                3   \n",
       "3  769911858  Existing Customer            40      F                4   \n",
       "4  709106358  Existing Customer            40      M                3   \n",
       "\n",
       "  Education_Level Marital_Status Income_Category Card_Category  \\\n",
       "0     High School        Married     $60K - $80K          Blue   \n",
       "1        Graduate         Single  Less than $40K          Blue   \n",
       "2        Graduate        Married    $80K - $120K          Blue   \n",
       "3     High School        Unknown  Less than $40K          Blue   \n",
       "4      Uneducated        Married     $60K - $80K          Blue   \n",
       "\n",
       "   Months_on_book  ...  Months_Inactive_12_mon  Contacts_Count_12_mon  \\\n",
       "0              39  ...                       1                      3   \n",
       "1              44  ...                       1                      2   \n",
       "2              36  ...                       1                      0   \n",
       "3              34  ...                       4                      1   \n",
       "4              21  ...                       1                      0   \n",
       "\n",
       "   Credit_Limit  Total_Revolving_Bal  Avg_Open_To_Buy  Total_Amt_Chng_Q4_Q1  \\\n",
       "0       12691.0                  777          11914.0                 1.335   \n",
       "1        8256.0                  864           7392.0                 1.541   \n",
       "2        3418.0                    0           3418.0                 2.594   \n",
       "3        3313.0                 2517            796.0                 1.405   \n",
       "4        4716.0                    0           4716.0                 2.175   \n",
       "\n",
       "   Total_Trans_Amt  Total_Trans_Ct  Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \n",
       "0             1144              42                1.625                  0.061  \n",
       "1             1291              33                3.714                  0.105  \n",
       "2             1887              20                2.333                  0.000  \n",
       "3             1171              20                2.333                  0.760  \n",
       "4              816              28                2.500                  0.000  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Esta celda no es modificable.\n",
    "\n",
    "df = pd.read_csv('Archivos/BankChurners.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "a31730c7764b7a1ef82ca7b274792d5b",
     "grade": false,
     "grade_id": "cell-c059facef12c28b7",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "### Ejercicio 1\n",
    "Utiliza `plotly` para realizar un  diagramas de torta sobre el estado conyugal de los clientes (resaltando el más predominante)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "5309d13c57fafd72fa06d9fe2c82624c",
     "grade": true,
     "grade_id": "cell-86d857eb7410555b",
     "locked": false,
     "points": 1,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# YOUR CODE HERE\n",
    "\n",
    "df.info\n",
    "import plotly.io as pio\n",
    "pio.renderers.default='browser'\n",
    "\n",
    "\n",
    "labels= (df['Marital_Status'].unique())\n",
    "values= (df['Marital_Status'].value_counts())\n",
    "\n",
    "fig = go.Figure(data=[go.Pie(labels= labels,\n",
    "                             values= values)])\n",
    "\n",
    "fig.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "87914ab4ebf2edc2064259682f82c5f9",
     "grade": false,
     "grade_id": "cell-023c0968c4f646f9",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "### Ejercicio 2\n",
    "Utiliza `plotly` para realizar un gráfico que permita verificar si el cambio en el monto de transacciones (cuarto trimestre a primer trimestre) se ajusta a una distribución normal."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "a6d5f23033d8694896dc0fd42e3c91e4",
     "grade": true,
     "grade_id": "cell-346158b29fcf8b86",
     "locked": false,
     "points": 1,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [],
   "source": [
    "# YOUR CODE HERE\n",
    "\n",
    "\n",
    "fig = go.Figure(data=[go.Histogram(x=df['Total_Ct_Chng_Q4_Q1'])]) \n",
    "fig.show() \n",
    "\n",
    "# Se evidencia un sesgo en la cola derecha. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "0a543f50539e52859d8a4b52319c3ddb",
     "grade": false,
     "grade_id": "cell-8adfbd219c5c52ac",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "## Base de datos de mercadeo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "cd6a34234c4c65e23677b8cdd4559bbb",
     "grade": false,
     "grade_id": "cell-699e70fccfc6f274",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "A continuación, encuentras la descripción de las variables contenidas en la base de datos 'marketing_data.csv'. Utiliza esta información para dar respuesta a los ejercicios 3, 4 y 5."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "ee4bd15c54fd77498bbc3c921bbdbdd6",
     "grade": false,
     "grade_id": "cell-612959502f49933b",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "| <center>Variable<center> | <center>Descripción<center> | \n",
    "| :--- | :--- | \n",
    "| ID | Identificador único del cliente |\n",
    "| Year_Birth | Año de nacimiento del cliente |\n",
    "| Education | Nivel máximo de escolaridad alcanzado|\n",
    "| Marital_Status | Estado conyugal |\n",
    "| Income | Ingresos anuales del hogar del cliente |\n",
    "| Kidhome | Número de niños en el hogar|\n",
    "| Teenhome | Número de adolescentes en el hogar|\n",
    "| Dt_Customer | Fecha de inscripción del cliente en la empresa |\n",
    "| Recency | Número de días desde la última compra del cliente |\n",
    "| MntWines | Gastos en vino durante los dos últimos años |\n",
    "| MntFruits | Gastos en frutas durante los dos últimos años |\n",
    "| MntMeatProducts | Gastos en productos cárnicos durante los dos últimos años |\n",
    "| MntFishProducts | Gastos en pescado durante los dos últimos años |\n",
    "| MntSweetProducts | Gastos en dulces durante los dos últimos años |\n",
    "| MntGoldProds | Gastos en oro durante los dos últimos años |\n",
    "| NumDealsPurchases | Número de compras realizadas con un descuento |\n",
    "| NumWebPurchases| Número de compras realizadas a través del sitio web de la empresa |\n",
    "| NumCatalogPurchases | Número de compras realizadas por catálogo |\n",
    "| NumStorePurchases | Número de compras realizadas directamente en las tiendas |\n",
    "| NumWebVisitsMonth | Número de visitas al sitio web de la empresa en el último mes |\n",
    "| AcceptedCmp1 | 1 si el cliente aceptó la oferta en la primera campaña, 0 en caso contrario |\n",
    "| Response | 1 si el cliente aceptó la oferta en la última campaña, 0 en caso contrario |\n",
    "| Complain | 1 si el cliente se ha quejado en los últimos 2 años, 0 en caso contrario |\n",
    "| Country | País de ubicación del cliente |\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "c1f2d15b25ec655c65a5cc7ffbbbe8ce",
     "grade": false,
     "grade_id": "cell-fb529804f0c4d2a0",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>...</th>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Response</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1826</td>\n",
       "      <td>1970</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>84835.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6/16/2014</td>\n",
       "      <td>0</td>\n",
       "      <td>189</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1961</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>57091.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6/15/2014</td>\n",
       "      <td>0</td>\n",
       "      <td>464</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10476</td>\n",
       "      <td>1958</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Married</td>\n",
       "      <td>67267.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5/13/2014</td>\n",
       "      <td>0</td>\n",
       "      <td>134</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>US</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1386</td>\n",
       "      <td>1967</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Together</td>\n",
       "      <td>32474.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5/11/2014</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>AUS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5371</td>\n",
       "      <td>1989</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>21474.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4/8/2014</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n",
       "0   1826        1970  Graduation       Divorced  84835.0        0         0   \n",
       "1      1        1961  Graduation         Single  57091.0        0         0   \n",
       "2  10476        1958  Graduation        Married  67267.0        0         1   \n",
       "3   1386        1967  Graduation       Together  32474.0        1         1   \n",
       "4   5371        1989  Graduation         Single  21474.0        1         0   \n",
       "\n",
       "  Dt_Customer  Recency  MntWines  ...  NumStorePurchases  NumWebVisitsMonth  \\\n",
       "0   6/16/2014        0       189  ...                  6                  1   \n",
       "1   6/15/2014        0       464  ...                  7                  5   \n",
       "2   5/13/2014        0       134  ...                  5                  2   \n",
       "3   5/11/2014        0        10  ...                  2                  7   \n",
       "4    4/8/2014        0         6  ...                  2                  7   \n",
       "\n",
       "   AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  \\\n",
       "0             0             0             0             0             0   \n",
       "1             0             0             0             0             1   \n",
       "2             0             0             0             0             0   \n",
       "3             0             0             0             0             0   \n",
       "4             1             0             0             0             0   \n",
       "\n",
       "   Response  Complain  Country  \n",
       "0         1         0       SP  \n",
       "1         1         0       CA  \n",
       "2         0         0       US  \n",
       "3         0         0      AUS  \n",
       "4         1         0       SP  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mercadeo = pd.read_csv('Archivos/marketing_data.csv')\n",
    "mercadeo.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "81aa79bf90f39fc8a6b34092b2321d0e",
     "grade": false,
     "grade_id": "cell-cefa021fe395b2cb",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "### Ejercicio 3\n",
    "Utiliza `plotly` para realizar un gráfico de dispersión que permita visualizar la relación que existe entre las variables 'Year_Birth' y 'MntWines'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "e4c172a4c3064d1294c8584a4952b1f4",
     "grade": true,
     "grade_id": "cell-f8250a7a4c997032",
     "locked": false,
     "points": 1,
     "schema_version": 3,
     "solution": true,
     "task": false
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# YOUR CODE HERE\n",
    "\n",
    "fig = go.Figure()\n",
    "\n",
    "fig.add_trace(go.Scatter(x = mercadeo[\"Year_Birth\"], y = mercadeo[\"MntWines\"],\n",
    "                        mode = \"markers\"))\n",
    "\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "488f4d805ac39bec55fec3e98c937400",
     "grade": true,
     "grade_id": "cell-4bb4dc3dba9dcf38",
     "locked": false,
     "points": 1,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2240 entries, 0 to 2239\n",
      "Data columns (total 28 columns):\n",
      " #   Column               Non-Null Count  Dtype  \n",
      "---  ------               --------------  -----  \n",
      " 0   ID                   2240 non-null   int64  \n",
      " 1   Year_Birth           2240 non-null   int64  \n",
      " 2   Education            2240 non-null   object \n",
      " 3   Marital_Status       2240 non-null   object \n",
      " 4   Income               2216 non-null   float64\n",
      " 5   Kidhome              2240 non-null   int64  \n",
      " 6   Teenhome             2240 non-null   int64  \n",
      " 7   Dt_Customer          2240 non-null   object \n",
      " 8   Recency              2240 non-null   int64  \n",
      " 9   MntWines             2240 non-null   int64  \n",
      " 10  MntFruits            2240 non-null   int64  \n",
      " 11  MntMeatProducts      2240 non-null   int64  \n",
      " 12  MntFishProducts      2240 non-null   int64  \n",
      " 13  MntSweetProducts     2240 non-null   int64  \n",
      " 14  MntGoldProds         2240 non-null   int64  \n",
      " 15  NumDealsPurchases    2240 non-null   int64  \n",
      " 16  NumWebPurchases      2240 non-null   int64  \n",
      " 17  NumCatalogPurchases  2240 non-null   int64  \n",
      " 18  NumStorePurchases    2240 non-null   int64  \n",
      " 19  NumWebVisitsMonth    2240 non-null   int64  \n",
      " 20  AcceptedCmp3         2240 non-null   int64  \n",
      " 21  AcceptedCmp4         2240 non-null   int64  \n",
      " 22  AcceptedCmp5         2240 non-null   int64  \n",
      " 23  AcceptedCmp1         2240 non-null   int64  \n",
      " 24  AcceptedCmp2         2240 non-null   int64  \n",
      " 25  Response             2240 non-null   int64  \n",
      " 26  Complain             2240 non-null   int64  \n",
      " 27  Country              2240 non-null   object \n",
      "dtypes: float64(1), int64(23), object(4)\n",
      "memory usage: 490.1+ KB\n"
     ]
    }
   ],
   "source": [
    "# YOUR CODE HERE\n",
    "mercadeo.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "b98f391107cb3e98817bbdc858b94a0e",
     "grade": false,
     "grade_id": "cell-8780f5e0051b0d78",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    },
    "tags": []
   },
   "source": [
    "### Ejercicio 4\n",
    "Utiliza `ipywidgets` para filtrar las observaciones de la base de datos de acuerdo con los siguentes criterios:\n",
    "1. Nivel máximo de escolaridad alcanzado.\n",
    "2. Número de niños en el hogar.\n",
    "3. Número de adolescentes en el hogar."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "ea1e878b1d0a0f0ee2633e02188b4416",
     "grade": true,
     "grade_id": "cell-d462e01749cd00f2",
     "locked": false,
     "points": 1,
     "schema_version": 3,
     "solution": true,
     "task": false
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "41f802d27683499799477b9fa3037d66",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(Dropdown(description='Educacion', options=('Todos', '2n Cycle', 'Basic', 'Graduation', '…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Función para filtrar \n",
    "\n",
    "def valores_filtro_columna(columna):\n",
    "    valores = columna.unique().tolist() # Guardamos una lista con los valores únicos de la columna que entra por parámetro.\n",
    "    valores = sorted(valores)           # Organizamos la lista de valores únicos de manera ascedente.\n",
    "    valores.insert(0, \"Todos\")          # Agregamos el elemento \"Todos\" en la primera posición de la lista.\n",
    "    return valores\n",
    "\n",
    "def filtrar(Educacion, Numero_ninos, Numero_adolescentes):\n",
    "    # Los siguientes cuatro casos ajustan los registros a mostrar de acuerdo con la selección del usuario.\n",
    "    if  Educacion == \"Todos\" and Numero_ninos == \"Todos\" and Numero_adolescentes == \"Todos\":\n",
    "        display(mercadeo)   \n",
    "    elif Educacion == \"Todos\" and Numero_ninos != \"Todos\" and Numero_adolescentes != \"Todos\":\n",
    "        display(mercadeo[(mercadeo[\"Kidhome\"] == Numero_ninos) & (mercadeo[\"Teenhome\"] == Numero_adolescentes)])\n",
    "    elif Numero_ninos == \"Todos\" and Educacion != \"Todos\" and Numero_adolescentes != \"Todos\":\n",
    "        display(mercadeo[(mercadeo[\"Education\"] == Educacion) & (mercadeo[\"Teenhome\"] == Numero_adolescentes)])\n",
    "    elif Numero_adolescentes == \"Todos\" and Educacion != \"Todos\" and Numero_ninos != \"Todos\":\n",
    "        display(mercadeo[(mercadeo[\"Education\"] == Educacion) & (mercadeo[\"Kidhome\"] == Numero_ninos)])\n",
    "    elif Numero_ninos != \"Todos\" and Educacion == \"Todos\" and Numero_adolescentes == \"Todos\":\n",
    "        display(mercadeo[(mercadeo[\"Kidhome\"] == Numero_ninos)])\n",
    "    elif Numero_adolescentes != \"Todos\" and Educacion == \"Todos\" and Numero_ninos == \"Todos\":\n",
    "        display(mercadeo[(mercadeo[\"Teenhome\"] == Numero_adolescentes)])                         \n",
    "    elif Educacion != \"Todos\" and Numero_adolescentes == \"Todos\" and Numero_ninos == \"Todos\":\n",
    "        display(mercadeo[(mercadeo[\"Education\"] == Educacion)]) \n",
    "    elif Educacion != \"Todos\" and Numero_adolescentes != \"Todos\" and Numero_ninos != \"Todos\":\n",
    "        display(mercadeo[(mercadeo[\"Education\"] == Educacion) &(mercadeo[\"Teenhome\"] == Numero_adolescentes)&(mercadeo[\"Kidhome\"] == Numero_ninos) ])         \n",
    "        \n",
    "        \n",
    "interactive_plot = interactive(\n",
    "                                filtrar, \n",
    "                                Educacion = valores_filtro_columna(mercadeo[\"Education\"]),\n",
    "                                Numero_ninos = valores_filtro_columna(mercadeo[\"Kidhome\"]),\n",
    "                                Numero_adolescentes = valores_filtro_columna(mercadeo[\"Teenhome\"])\n",
    "                              )\n",
    "\n",
    "\n",
    "\n",
    "display(interactive_plot)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "7e9fcd14ff087fe5943729240d9b8e3a",
     "grade": false,
     "grade_id": "cell-17898209587a187e",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "### Ejercicio 5\n",
    "Utiliza `ipywidgets` y `plotly` para generar un gráfico con controles que:\n",
    "1. Cuente con un control para seleccionar una de las variable de Gastos frente a los ingresos.\n",
    "1. Genere un gráfico de dispersión\n",
    "2. Genere un diagrama de caja."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {
    "deletable": false,
    "nbgrader": {
     "cell_type": "code",
     "checksum": "621bbd673a97f8955e6e9738e6c87ab9",
     "grade": true,
     "grade_id": "cell-2a14b99ae1ab7ad7",
     "locked": false,
     "points": 1,
     "schema_version": 3,
     "solution": true,
     "task": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Palermo' 'Recoleta' 'Monserrat' 'Nuñez' 'Balvanera' 'Belgrano'\n",
      " 'San Nicolas' 'San Telmo' 'Constitucion' 'Puerto Madero' 'Chacarita'\n",
      " 'Retiro' 'Villa Crespo' 'Boedo' 'Colegiales' 'Almagro' 'Caballito'\n",
      " 'San Cristobal' 'Villa Ortuzar' 'Nueva Pompeya' 'Parque Chacabuco'\n",
      " 'Villa Urquiza' 'Barracas' 'Villa Santa Rita' 'Coghlan'\n",
      " 'Parque Patricios' 'Boca' 'Villa Luro' 'Villa Devoto' 'Saavedra' 'Flores'\n",
      " 'Monte Castro' 'Velez Sarsfield' 'Floresta' 'Parque Chas' 'Paternal'\n",
      " 'Agronomia' 'Villa Pueyrredon' 'Villa Del Parque' 'Villa Gral. Mitre'\n",
      " 'Parque Avellaneda' 'Liniers' 'Mataderos' 'Villa Real' 'Versalles'\n",
      " 'Villa Riachuelo' 'Villa Lugano' 'Villa Soldati']\n"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('/Users/LinaH/Documents/GitHub/HCAD/S6 - Visualizacion e interactividad/S6.TU1/Archivos/listings.csv')\n",
    "print(df['neighbourhood_cleansed'].unique())\n",
    "num_huespedes = widgets.IntSlider(min = 1.0, max = 16.0, step = 1.0)\n",
    "\n",
    "tipo = widgets.Dropdown(\n",
    "                        description = 'Tipo Alojamiento:',\n",
    "                        options = df['room_type'].unique().tolist(),\n",
    "                        style = {'description_width': 'initial'}       # Mostrar el nombre completo.\n",
    "                       )\n",
    "\n",
    "\n",
    "barrio = widgets.Dropdown(\n",
    "                            description = 'Barrio:',\n",
    "                            options = df['neighbourhood_cleansed'].unique().tolist(),\n",
    "                            style = {'description_width': 'initial'}                    # Mostrar el nombre completo.\n",
    "                         )\n",
    "\n",
    "\n",
    "fig = go.FigureWidget(\n",
    "                        data = go.Histogram(name = 'Precio'),  \n",
    "    \n",
    "                        layout = go.Layout(\n",
    "                                            title = 'Acomodación en Buenos Aires',\n",
    "                                            xaxis_title = 'Precio en pesos argentinos',\n",
    "                                            yaxis_title = 'Número de alojamientos',\n",
    "                                          )\n",
    "                     )\n",
    "\n",
    "def filtrar():\n",
    "    filtrar_lista = [i and j and k for i, j, k in zip(\n",
    "                                                        df['accommodates'] >= num_huespedes.value, \n",
    "                                                        df['room_type'] == tipo.value,\n",
    "                                                        df['neighbourhood_cleansed'] == barrio.value\n",
    "                                                     )\n",
    "                    ]\n",
    "    \n",
    "    df_temporal = df[filtrar_lista]\n",
    "    fig.data[0].x = df_temporal['price'] # Establecemos los datos en el eje x.\n",
    "    \n",
    "\n",
    "def respuesta(change):\n",
    "    filtrar()\n",
    "    \n",
    "\n",
    "barrio.observe(respuesta, names = 'value')\n",
    "tipo.observe(respuesta, names = 'value')\n",
    "num_huespedes.observe(respuesta, names = 'value')\n",
    "\n",
    "\n",
    "filtrar()\n",
    "\n",
    "\n",
    "parte_superior = widgets.HBox([widgets.Label('Acomodacion para:'), num_huespedes])\n",
    "\n",
    "\n",
    "parte_inferior = widgets.HBox([barrio, tipo])\n",
    "\n",
    "\n",
    "visualizacion = widgets.VBox(\n",
    "              [parte_superior,\n",
    "              parte_inferior,\n",
    "              fig]\n",
    "            )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "e25b23fc0faefdb0436fa6406cfa0d05",
     "grade": false,
     "grade_id": "cell-2fa3d05e2132886b",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "## Referencias\n",
    " \n",
    "Daoud, J (2020). Marketing Analytics. Recuperado el 11 de febrero de 2021 de: https://www.kaggle.com/jackdaoud/marketing-data\n",
    "\n",
    "Goyal, S (2020). Credit Card customers. Recuperado el 11 de febrero de 2021 de: https://www.kaggle.com/sakshigoyal7/credit-card-customers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false,
    "nbgrader": {
     "cell_type": "markdown",
     "checksum": "ee5ddea1ae84061f3352e5370b6acafd",
     "grade": false,
     "grade_id": "cell-431aff6407e8b147",
     "locked": true,
     "schema_version": 3,
     "solution": false,
     "task": false
    }
   },
   "source": [
    "## Créditos\n",
    "\n",
    "**Autor(es):** Juan David Reyes Jaimes, Diego Alejandro Cely Gómez\n",
    "\n",
    "**Fecha última actualización:** 17/09/2021"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
